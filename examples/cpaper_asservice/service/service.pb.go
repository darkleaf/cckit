// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.13.0
// source: cpaper_asservice/service/service.proto

package service

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	schema "github.com/s7techlab/cckit/examples/cpaper_asservice/schema"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_cpaper_asservice_service_service_proto protoreflect.FileDescriptor

var file_cpaper_asservice_service_service_proto_rawDesc = []byte{
	0x0a, 0x26, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x63,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x32, 0xe7, 0x06, 0x0a, 0x06, 0x43, 0x50, 0x61, 0x70, 0x65, 0x72, 0x12, 0x5d,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x2c,
	0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x0f, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x2f, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x12, 0x84, 0x01,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x2a, 0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49,
	0x64, 0x1a, 0x28, 0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x22, 0x27, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x21, 0x12, 0x1f, 0x2f, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x7d, 0x2f, 0x7b, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x7d, 0x12, 0x7c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x45, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x23, 0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72,
	0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x61, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x1a, 0x28, 0x2e, 0x63,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61,
	0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x22, 0x1a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12,
	0x2f, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x65, 0x78, 0x74, 0x69, 0x64, 0x2f, 0x7b, 0x69,
	0x64, 0x7d, 0x12, 0x7a, 0x0a, 0x05, 0x49, 0x73, 0x73, 0x75, 0x65, 0x12, 0x2d, 0x2e, 0x63, 0x70,
	0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73,
	0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x49, 0x73, 0x73, 0x75, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x72, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x1a, 0x28, 0x2e, 0x63, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x63,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x74,
	0x0a, 0x03, 0x42, 0x75, 0x79, 0x12, 0x2b, 0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e,
	0x42, 0x75, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x70,
	0x65, 0x72, 0x1a, 0x28, 0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x22, 0x16, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x62, 0x75,
	0x79, 0x3a, 0x01, 0x2a, 0x12, 0x7d, 0x0a, 0x06, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x12, 0x2e,
	0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x1a, 0x28,
	0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13,
	0x22, 0x0e, 0x2f, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d,
	0x3a, 0x01, 0x2a, 0x12, 0x87, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x2a,
	0x2e, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63,
	0x69, 0x61, 0x6c, 0x50, 0x61, 0x70, 0x65, 0x72, 0x49, 0x64, 0x1a, 0x28, 0x2e, 0x63, 0x70, 0x61,
	0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x73, 0x63,
	0x68, 0x65, 0x6d, 0x61, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x72, 0x63, 0x69, 0x61, 0x6c, 0x50,
	0x61, 0x70, 0x65, 0x72, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x2a, 0x1f, 0x2f, 0x63,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x2f, 0x7b, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x7d, 0x2f, 0x7b,
	0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x7d, 0x42, 0x3e, 0x5a,
	0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x37, 0x74, 0x65,
	0x63, 0x68, 0x6c, 0x61, 0x62, 0x2f, 0x63, 0x63, 0x6b, 0x69, 0x74, 0x2f, 0x65, 0x78, 0x61, 0x6d,
	0x70, 0x6c, 0x65, 0x73, 0x2f, 0x63, 0x70, 0x61, 0x70, 0x65, 0x72, 0x5f, 0x61, 0x73, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_cpaper_asservice_service_service_proto_goTypes = []interface{}{
	(*empty.Empty)(nil),                  // 0: google.protobuf.Empty
	(*schema.CommercialPaperId)(nil),     // 1: cpaper_asservice.schema.CommercialPaperId
	(*schema.ExternalId)(nil),            // 2: cpaper_asservice.schema.ExternalId
	(*schema.IssueCommercialPaper)(nil),  // 3: cpaper_asservice.schema.IssueCommercialPaper
	(*schema.BuyCommercialPaper)(nil),    // 4: cpaper_asservice.schema.BuyCommercialPaper
	(*schema.RedeemCommercialPaper)(nil), // 5: cpaper_asservice.schema.RedeemCommercialPaper
	(*schema.CommercialPaperList)(nil),   // 6: cpaper_asservice.schema.CommercialPaperList
	(*schema.CommercialPaper)(nil),       // 7: cpaper_asservice.schema.CommercialPaper
}
var file_cpaper_asservice_service_service_proto_depIdxs = []int32{
	0, // 0: cpaper_asservice.service.CPaper.List:input_type -> google.protobuf.Empty
	1, // 1: cpaper_asservice.service.CPaper.Get:input_type -> cpaper_asservice.schema.CommercialPaperId
	2, // 2: cpaper_asservice.service.CPaper.GetByExternalId:input_type -> cpaper_asservice.schema.ExternalId
	3, // 3: cpaper_asservice.service.CPaper.Issue:input_type -> cpaper_asservice.schema.IssueCommercialPaper
	4, // 4: cpaper_asservice.service.CPaper.Buy:input_type -> cpaper_asservice.schema.BuyCommercialPaper
	5, // 5: cpaper_asservice.service.CPaper.Redeem:input_type -> cpaper_asservice.schema.RedeemCommercialPaper
	1, // 6: cpaper_asservice.service.CPaper.Delete:input_type -> cpaper_asservice.schema.CommercialPaperId
	6, // 7: cpaper_asservice.service.CPaper.List:output_type -> cpaper_asservice.schema.CommercialPaperList
	7, // 8: cpaper_asservice.service.CPaper.Get:output_type -> cpaper_asservice.schema.CommercialPaper
	7, // 9: cpaper_asservice.service.CPaper.GetByExternalId:output_type -> cpaper_asservice.schema.CommercialPaper
	7, // 10: cpaper_asservice.service.CPaper.Issue:output_type -> cpaper_asservice.schema.CommercialPaper
	7, // 11: cpaper_asservice.service.CPaper.Buy:output_type -> cpaper_asservice.schema.CommercialPaper
	7, // 12: cpaper_asservice.service.CPaper.Redeem:output_type -> cpaper_asservice.schema.CommercialPaper
	7, // 13: cpaper_asservice.service.CPaper.Delete:output_type -> cpaper_asservice.schema.CommercialPaper
	7, // [7:14] is the sub-list for method output_type
	0, // [0:7] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_cpaper_asservice_service_service_proto_init() }
func file_cpaper_asservice_service_service_proto_init() {
	if File_cpaper_asservice_service_service_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_cpaper_asservice_service_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_cpaper_asservice_service_service_proto_goTypes,
		DependencyIndexes: file_cpaper_asservice_service_service_proto_depIdxs,
	}.Build()
	File_cpaper_asservice_service_service_proto = out.File
	file_cpaper_asservice_service_service_proto_rawDesc = nil
	file_cpaper_asservice_service_service_proto_goTypes = nil
	file_cpaper_asservice_service_service_proto_depIdxs = nil
}
